generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model NetworkInterface {
  interfaceId Int      @id @default(autoincrement())
  name        String
  identifier  String   @unique
  linkType    String
  ipv4        String
  subnet      String
  gateways    String[]
  routes      String[]
  status      Boolean

  devices            Device[]
  whitelistedDevices WhitelistedDevice[]
  blacklistedDevices BlacklistedDevice[]
  alerts             Alert[]
  BandwidthHourly    BandwidthHourly[]
  BandwidthDaily     BandwidthDaily[]
}

model Device {
  deviceId       Int           @id @default(autoincrement())
  deviceIp       String
  deviceMac      String
  macInfo        String?
  deviceHostname String?
  deviceOS       String?
  authorized     Boolean?      @default(false)
  status         DeviceStatus? @default(UP)

  interfaceId Int
  interface   NetworkInterface @relation(fields: [interfaceId], references: [interfaceId])

  bandwidthUsage  BandwidthUsage[]
  bandwidthHourly BandwidthHourly[]
  bandwidthDaily  BandwidthDaily[]
  openPorts       Port[]
  visitedSites    VisitedSite[]

  firstSeen DateTime @default(now())
  lastSeen  DateTime @default(now())

  @@unique([deviceMac, interfaceId])
}

model BandwidthUsage {
  id        Int      @id @default(autoincrement())
  upload    BigInt
  download  BigInt
  timestamp DateTime @default(now())
  deviceId  Int
  device    Device   @relation(fields: [deviceId], references: [deviceId])
}

model BandwidthHourly {
  id       Int      @id @default(autoincrement())
  hour     DateTime
  upload   BigInt
  download BigInt
  deviceId Int
  device   Device   @relation(fields: [deviceId], references: [deviceId])

  interfaceId Int
  interface   NetworkInterface @relation(fields: [interfaceId], references: [interfaceId])

  @@unique([deviceId, hour])
}

model BandwidthDaily {
  id       Int      @id @default(autoincrement())
  day      DateTime
  upload   BigInt
  download BigInt
  deviceId Int
  device   Device   @relation(fields: [deviceId], references: [deviceId])

  interfaceId Int
  interface   NetworkInterface @relation(fields: [interfaceId], references: [interfaceId])

  @@unique([deviceId, day])
}

model Port {
  portId     Int        @id @default(autoincrement())
  portNumber Int
  protocol   String?
  status     PortStatus
  firstSeen  DateTime   @default(now())
  lastSeen   DateTime   @default(now())
  deviceId   Int
  device     Device     @relation(fields: [deviceId], references: [deviceId])

  @@unique([deviceId, portNumber])
}

model VisitedSite {
  siteId     Int      @id @default(autoincrement())
  siteIp     String
  siteDomain String
  firstSeen  DateTime @default(now())
  lastSeen   DateTime @default(now())
  deviceId   Int
  device     Device   @relation(fields: [deviceId], references: [deviceId])
}

model BlockedSite {
  blockedSiteId Int      @id @default(autoincrement())
  siteIp        String
  siteDomain    String
  reason        String?
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

model WhitelistedDevice {
  whitelistedDeviceId  Int      @id @default(autoincrement())
  whitelistedDeviceMac String
  createdAt            DateTime @default(now())

  interfaceId Int
  interface   NetworkInterface @relation(fields: [interfaceId], references: [interfaceId])
}

model BlacklistedDevice {
  blacklistedDeviceId  Int      @id @default(autoincrement())
  blacklistedDeviceMac String
  createdAt            DateTime @default(now())

  interfaceId Int
  interface   NetworkInterface @relation(fields: [interfaceId], references: [interfaceId])
}

model Alert {
  alertId   Int           @id @default(autoincrement())
  alertType AlertType
  message   String
  severity  AlertSeverity
  resolved  Boolean       @default(false)
  timestamp DateTime      @default(now())

  interfaceId Int
  interface   NetworkInterface @relation(fields: [interfaceId], references: [interfaceId])
}

enum DeviceStatus {
  UP
  DOWN
}

enum PortStatus {
  OPEN
  CLOSED
}

enum AlertType {
  LOGIN
  CONNECTED_DEVICES_RELATED
  ACTION
  BANDWIDTH_RELATED
}

enum AlertSeverity {
  INFO
  WARNING
  CRITICAL
}
